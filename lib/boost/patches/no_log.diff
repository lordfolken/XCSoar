Index: boost_1_61_0_b1/boost/geometry/algorithms/detail/overlay/handle_colocations.hpp
===================================================================
--- boost_1_61_0_b1.orig/boost/geometry/algorithms/detail/overlay/handle_colocations.hpp
+++ boost_1_61_0_b1/boost/geometry/algorithms/detail/overlay/handle_colocations.hpp
@@ -195,7 +195,9 @@ inline signed_size_type add_turn_to_clus
 
     // Both operations.seg_id/fraction were already part of any cluster, and
     // these clusters are not the same. Merge of two clusters is necessary
+#ifdef BOOST_GEOMETRY_DEBUG_HANDLE_COLOCATIONS
     std::cout << " TODO: merge " << cid0 << " and " << cid1 << std::endl;
+#endif
     return cid0;
 }
 
@@ -315,7 +317,9 @@ inline void assign_cluster_to_turns(Turn
                 if (turn.cluster_id != -1
                         && turn.cluster_id != it->second)
                 {
+#ifdef BOOST_GEOMETRY_DEBUG_HANDLE_COLOCATIONS
                     std::cout << " CONFLICT " << std::endl;
+#endif
                 }
                 turn.cluster_id = it->second;
                 clusters[turn.cluster_id].insert(turn_index);
