on:
  workflow_dispatch:
  push:
    paths:
      - 'ide/docker/**'
      - 'ide/provisioning/**'
      - '.github/workflows/build-container.yml'
jobs:
 xcsoar-docker-env:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGENAME: xcsoar-build
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: True
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io 
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - id: string 
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}
      - name: build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./ide
          file: ./ide/docker/Dockerfile
          tags: ghcr.io/${{ steps.string.outputs.lowercase }}/xcsoar-build:latest
          cache-from: type=registry,ref=ghcr.io/${{ steps.string.outputs.lowercase }}/xcsoar-build:latest
          cache-to: type=inline
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
on:
  workflow_dispatch:  
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  compile-xcsoar-unix:
    runs-on: ubuntu-latest
    steps:
     - name: Wait for xcsoar-docker-env to be built
       uses: fountainhead/action-wait-for-check@v1.0.0
       id: wait-for-build
       with:
         token: ${{ secrets.GITHUB_TOKEN }}
         checkName: xcsoar-docker-env
         ref: ${{ github.event.pull_request.head.sha || github.sha }}
         intervalSeconds: 10
         timeoutSeconds: 2000
     - id: checkout 
       uses: actions/checkout@v2
       with:
         submodules: True
     - id: repository
       uses: ASzc/change-string-case-action@v1
       with:
         string: ${{ github.repository }}
     - name: XCSoar Compile UNIX 
       uses: addnab/docker-run-action@v3
       with:
         image: ghcr.io/${{ steps.repository.outputs.lowercase }}/xcsoar-build:latest
         options: -v ${{ github.workspace }}:/opt/xcsoar
         run: | 
           cd /opt/xcsoar
           xcsoar-compile UNIX
