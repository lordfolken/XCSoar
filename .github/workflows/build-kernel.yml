---
on:
  workflow_dispatch:
  push:
    paths:
      - 'kobo/kernel/**'
      - '.github/workflows/build-kernel.yml'
    branches:
      - master
  pull_request:
    paths:
      - 'kobo/kernel/**'
      - '.github/workflows/build-kernel.yml'
    branches:
      - master

jobs:
  build-kobo-kernel:
    strategy:
      matrix:
        model: [glohd, aura2]
        include:
          - model: glohd
          - model: aura2

    runs-on: ubuntu-latest

    steps:
      - id: checkout
        uses: actions/checkout@v2

      - id: checkout-kernel
        uses: actions/checkout@v2
        with:
          repository: XCSoar/linux
          path: output/src/linux
          ref: kobo-${{matrix.model}}

      - id: cache-ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: kobo-${{matrix.model}}-kernel

      - name: "Cache downloads"
        uses: actions/cache@v2
        with:
          key: kobo-kernel-downloads
          path: ${{github.workspace}}/output/download

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            u-boot-tools

      - name: "Install old ARM toolchain"
        run: |
          ./build/download.py \
            https://launchpad.net/gcc-arm-embedded/4.6/4.6-2012-q4-update/+download/gcc-arm-none-eabi-4_6-2012q4-20121016.tar.bz2 \
            https://launchpad.net/gcc-arm-embedded/4.6/4.6-2012-q4-update/+download/gcc-arm-none-eabi-4_6-2012q4-20121016.tar.bz2 \
            01ed7460c1b671545d8c7c68af3a6b3b489f229481d99dc5815df93a59144d6d \
            output/download
          cd output && tar xf download/gcc-arm-none-eabi-4_6-2012q4-20121016.tar.bz2

      - name: "Build kernel"
        working-directory: output/src/linux
        run: |
          cp ${{github.workspace}}/kobo/kernel/${{matrix.model}}.config .config
          make \
            CROSS_COMPILE=${{github.workspace}}/output/gcc-arm-none-eabi-4_6-2012q4/bin/arm-none-eabi- \
            ARCH=arm uImage

      - name: "upload uImage"
        uses: actions/upload-artifact@v2
        with:
          name: uImage-kobo-${{matrix.model}}
          path: output/src/linux/uImage
